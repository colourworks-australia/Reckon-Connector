#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reckon_Connector
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class dbLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCards(Cards instance);
    partial void UpdateCards(Cards instance);
    partial void DeleteCards(Cards instance);
    partial void InsertAccounts(Accounts instance);
    partial void UpdateAccounts(Accounts instance);
    partial void DeleteAccounts(Accounts instance);
    #endregion
		
		public dbLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cards> Cards
		{
			get
			{
				return this.GetTable<Cards>();
			}
		}
		
		public System.Data.Linq.Table<Accounts> Accounts
		{
			get
			{
				return this.GetTable<Accounts>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SELECT CardRecordID, CardTypeID, CardIdentification, Name, LastName, FirstName, C" +
		"hangeControl, IsIndividual, IsInactive, Notes")]
	public partial class Cards : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Property1;
		
		private string _CardTypeID;
		
		private string _CardIdentification;
		
		private string _Name;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _ChangeControl;
		
		private string _IsIndividual;
		
		private string _IsInactive;
		
		private string _Notes;
		
		private string _ABN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardRecordIDChanging(int value);
    partial void OnCardRecordIDChanged();
    partial void OnCardTypeIDChanging(string value);
    partial void OnCardTypeIDChanged();
    partial void OnCardIdentificationChanging(string value);
    partial void OnCardIdentificationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnChangeControlChanging(string value);
    partial void OnChangeControlChanged();
    partial void OnIsIndividualChanging(string value);
    partial void OnIsIndividualChanged();
    partial void OnIsInactiveChanging(string value);
    partial void OnIsInactiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnABNChanging(string value);
    partial void OnABNChanged();
    #endregion
		
		public Cards()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property1", IsPrimaryKey=true)]
		public int CardRecordID
		{
			get
			{
				return this._Property1;
			}
			set
			{
				if ((this._Property1 != value))
				{
					this.OnCardRecordIDChanging(value);
					this.SendPropertyChanging();
					this._Property1 = value;
					this.SendPropertyChanged("CardRecordID");
					this.OnCardRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardTypeID", CanBeNull=false)]
		public string CardTypeID
		{
			get
			{
				return this._CardTypeID;
			}
			set
			{
				if ((this._CardTypeID != value))
				{
					this.OnCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CardTypeID = value;
					this.SendPropertyChanged("CardTypeID");
					this.OnCardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardIdentification", CanBeNull=false)]
		public string CardIdentification
		{
			get
			{
				return this._CardIdentification;
			}
			set
			{
				if ((this._CardIdentification != value))
				{
					this.OnCardIdentificationChanging(value);
					this.SendPropertyChanging();
					this._CardIdentification = value;
					this.SendPropertyChanged("CardIdentification");
					this.OnCardIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeControl", CanBeNull=false)]
		public string ChangeControl
		{
			get
			{
				return this._ChangeControl;
			}
			set
			{
				if ((this._ChangeControl != value))
				{
					this.OnChangeControlChanging(value);
					this.SendPropertyChanging();
					this._ChangeControl = value;
					this.SendPropertyChanged("ChangeControl");
					this.OnChangeControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIndividual", CanBeNull=false)]
		public string IsIndividual
		{
			get
			{
				return this._IsIndividual;
			}
			set
			{
				if ((this._IsIndividual != value))
				{
					this.OnIsIndividualChanging(value);
					this.SendPropertyChanging();
					this._IsIndividual = value;
					this.SendPropertyChanged("IsIndividual");
					this.OnIsIndividualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInactive", CanBeNull=false)]
		public string IsInactive
		{
			get
			{
				return this._IsInactive;
			}
			set
			{
				if ((this._IsInactive != value))
				{
					this.OnIsInactiveChanging(value);
					this.SendPropertyChanging();
					this._IsInactive = value;
					this.SendPropertyChanged("IsInactive");
					this.OnIsInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", CanBeNull=false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ABN", CanBeNull=false)]
		public string ABN
		{
			get
			{
				return this._ABN;
			}
			set
			{
				if ((this._ABN != value))
				{
					this.OnABNChanging(value);
					this.SendPropertyChanging();
					this._ABN = value;
					this.SendPropertyChanged("ABN");
					this.OnABNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _IsInactive;
		
		private string _AccountName;
		
		private string _AccountNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIsInactiveChanging(string value);
    partial void OnIsInactiveChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    #endregion
		
		public Accounts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", IsPrimaryKey=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInactive", CanBeNull=false)]
		public string IsInactive
		{
			get
			{
				return this._IsInactive;
			}
			set
			{
				if ((this._IsInactive != value))
				{
					this.OnIsInactiveChanging(value);
					this.SendPropertyChanging();
					this._IsInactive = value;
					this.SendPropertyChanged("IsInactive");
					this.OnIsInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
