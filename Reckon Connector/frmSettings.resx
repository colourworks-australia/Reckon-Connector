<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAgIAAAAEAIAARBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAACAAAAAgAgGAAAAwz5hywAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADpklEQVR4Xu3bsWsU
        QRSA8WRJkSKFhUUKC4sUgoIBU1iksFCwsAyIYOEfYGFhmUKwtIiQwsJCwUZIEUTFQkULQQXFgIKFgoWF
        dgoWBhISv7k8bLyd27279ZK77wfDu72deXs3M5ed272MSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZL+l/GI6tH29vYUYY44PT4+PklcJ37nuTXiz1YlDZ+tra0FyirlN4P+D57foDymnGdz
        Ipppr2MwTzKo71qjXBH1P1EWIoX2KgZxkbIR41obba8RdsVfg6FdA9DB6Zw8S5wjHqak8/BrylpRFJ+J
        XWHwljinX4rNrvG67vI6zsWm+olBukj5RSe3xb6XhENRvTLaXGgl6BNex2KkVj/Qpwfp1Gc73ZtHvd+U
        y9G0I5pMpzY7rfuDfOk0MhuHGF10wjydcY3yiHKfcpVyJHZXQo5J2nxMHVsHbS5GiizqLUWTviLvahxi
        9PD+06C17Vier/UJpW5aWNVGu3SqyJ4O2D9Fva4XfZ2QeyYONVp44zeiD0pRp+MkoM5cLwNE22eRqi32
        p+/wjSH/6K0FeNNn4v1nUS+dd7Of0NSBO7V7kr41tEX+lajTCPK/jEP9d0XEQTgbMSsuq56JzTLHIvYi
        txg7ELEpTecvNcgJUGf1ezRimfRdvydMslyO6YiNYJKP5ASYjFhFp7p1cpXJXZkb2mv4g5wAaxE74hPy
        Nh6WeRWxaxwj93rSXb3G8Nen0fw5A5sAdPjDeJhF52xSnsRmmcqTKeNNxHaaHqCRnAC3GdgHsZlzvSiK
        3OCkXE/jYVd4HZ3u2d+L2JQq/TB86Ph0efURsS323SJUOr9H3dpol+7XH480bVFt/07txoz25WA64AKD
        sEL5SHlPuUM5HbsrIcc+2nxtdWc9VyJFFrm7mmCdkDd7EUo10JnpimDl+wHUXSZUWuFTd4bSxOXgE3EI
        9QMdmu4vpBtLpYPFvi+E2h1Pu35ccfyLfMuRemCG9gchdG66wZLO7ekqYbqz2PpBSHzde0FcJ9ZG3hXa
        9vyzLsb/OXlOUTbjKe0FDNwEk+Bm6yPcpTSJCKX3HrQHMIBp4fqtNaIVUf8HpfItbu1yjGlab1ymZH8d
        zP70a+C0ftgXTXcN/zGkTxjgGc7n8zxMN47StYu0xvjOoL8piuIDjyVJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJo2xs7A8HelOUOuiBVwAAAABJRU5ErkJggg==
</value>
  </data>
</root>